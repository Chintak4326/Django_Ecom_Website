# Generated by Django 3.0.6 on 2020-08-18 13:34

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='categories1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='AdminPanel.categories1')),
            ],
            options={
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='company1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=25255)),
                ('email', models.EmailField(max_length=254)),
                ('contact_no', models.BigIntegerField()),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='product1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('model_name', models.CharField(max_length=255)),
                ('model_code', models.CharField(max_length=255, null=True)),
                ('images', models.ImageField(null=True, upload_to='images/')),
                ('description', models.TextField(null=True)),
                ('browser_type', models.CharField(max_length=255)),
                ('touchscreen', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('sim_type', models.CharField(max_length=255)),
                ('hybrid_sim_slot', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('otg_compatible', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('display_size', models.CharField(max_length=250)),
                ('resolution', models.CharField(max_length=255)),
                ('resolution_type', models.CharField(max_length=255)),
                ('other_display_features', models.TextField(null=True)),
                ('operating_system', models.TextField(null=True)),
                ('processor_type', models.CharField(max_length=500)),
                ('processor_core', models.CharField(max_length=255)),
                ('primary_clock_speed', models.CharField(max_length=255)),
                ('secondary_clock_speed', models.CharField(max_length=255)),
                ('operating_frequency', models.CharField(max_length=255, null=True)),
                ('supported_memory_card_type', models.CharField(max_length=255)),
                ('memory_card_slot_type', models.CharField(max_length=255)),
                ('primary_camera_available', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('primary_camera', models.CharField(max_length=255)),
                ('primary_camera_features', models.TextField(null=True)),
                ('secondary_camera_available', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('secondary_camera', models.CharField(max_length=255)),
                ('secondary_camera_features', models.TextField(null=True)),
                ('flash', models.CharField(max_length=250)),
                ('dual_camera_lens', models.CharField(max_length=255)),
                ('network_type', models.CharField(max_length=255)),
                ('supported_networks', models.CharField(max_length=255)),
                ('internet_connectivity', models.CharField(max_length=255, null=True)),
                ('gprs', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('pre_installed_browser', models.CharField(max_length=255)),
                ('blutooth_support', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('blutooth_version', models.CharField(max_length=100)),
                ('wifi', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('wifi_version', models.CharField(max_length=255)),
                ('usb_connectivity', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('audio_jack', models.CharField(max_length=100)),
                ('touchscreen_type', models.CharField(max_length=255)),
                ('sim_size', models.CharField(max_length=100)),
                ('sensors', models.TextField(null=True)),
                ('other_features', models.TextField(null=True)),
                ('gps_type', models.CharField(max_length=255)),
                ('fm_radio', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('music_player', models.IntegerField(choices=[(0, 'NO'), (1, 'YES')], default=0)),
                ('video_format', models.CharField(max_length=255, null=True)),
                ('battery_capacity', models.CharField(max_length=255)),
                ('width', models.CharField(max_length=100)),
                ('height', models.CharField(max_length=100)),
                ('depth', models.CharField(max_length=100)),
                ('weight', models.CharField(max_length=100)),
                ('warranty', models.TextField(null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPanel.categories1')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='state1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact_no', models.CharField(max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='productImage1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.ImageField(null=True, upload_to='images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPanel.product1')),
            ],
            options={
                'db_table': 'product_image',
            },
        ),
        migrations.CreateModel(
            name='productAttributes1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ram', models.CharField(max_length=255)),
                ('rom', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=255)),
                ('price', models.IntegerField()),
                ('stock', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPanel.product1')),
            ],
            options={
                'db_table': 'product_attributes',
            },
        ),
        migrations.CreateModel(
            name='city1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPanel.state1')),
            ],
            options={
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='area1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('pincode', models.IntegerField()),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AdminPanel.city1')),
            ],
            options={
                'db_table': 'area',
            },
        ),
    ]
